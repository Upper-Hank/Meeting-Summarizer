// Á¨¨4È°µÔºöÊÄªÁªìÈ°µÈù¢Ê®°Âùó
// ÂåÖÂê´ÊÄªÁªìÁîüÊàêËøáÁ®ãÁöÑÊâÄÊúâÈÄªËæë„ÄÅÂä®Áîª„ÄÅÊ®°ÊãüÂô®Âíå‰∫§‰∫í

// È°µÈù¢Áä∂ÊÄÅÁÆ°ÁêÜ
const SummaryPageState = {
  isInitialized: false,
  isVisible: false,

  // ÊÄªÁªìÁä∂ÊÄÅ
  summaryStatus: 'idle', // 'idle' | 'loading' | 'completed' | 'error'
  summaryText: '',
  isRendered: false,

  // ÊåâÈíÆÁä∂ÊÄÅ
  canClickFinish: false
};

// ÊÄªÁªìÊ®°ÊãüÂô®
const SummarySimulator = {
  // Ê®°ÊãüÊÄªÁªìÊñáÊú¨Êï∞ÊçÆ
  mockSummaryText: `# Meeting Summary - Q3 Business Review

## üìä Key Metrics & Performance

**Revenue Achievement:**
- Total Q3 Revenue: $2.4M (‚Üë15% vs Q2)
- Enterprise Segment: 60% of total revenue
- Average Deal Size: $51,000 (‚Üë8%)

**Customer Growth:**
- New Enterprise Clients: 47
- New SMB Customers: 312
- Monthly Active Users: ‚Üë22%
- Customer Satisfaction: 4.6/5

## üéØ Product Highlights

- **SaaS Platform Performance:** 22% increase in monthly active users
- **Customer Feedback:** Strong positive response to new analytics dashboard
- **Satisfaction Scores:** Maintained high rating of 4.6 out of 5

## üöÄ Q4 Objectives

**Revenue Target:** $2.8M

**Strategic Focus Areas:**
- Healthcare vertical expansion
- Fintech market penetration
- Product development: 2 new features
- Team expansion: 5 additional sales representatives

## üë• Meeting Participants

**Presenter:** Sarah Chen, VP of Sales

## üìù Action Items

1. **Sales Team Expansion**
   - Hire 5 additional sales representatives
   - Focus on healthcare and fintech verticals

2. **Product Development**
   - Launch 2 new product features in Q4
   - Continue improving analytics dashboard based on user feedback

3. **Market Expansion**
   - Develop go-to-market strategy for healthcare sector
   - Create fintech-specific product positioning

---

*Meeting Duration: Approximately 15 minutes*
*Generated on: ${new Date().toLocaleDateString()}*`,

  // ÁîüÊàêÊÄªÁªìAPIË∞ÉÁî®
  // @param {Function} onProgress - ËøõÂ∫¶ÂõûË∞ÉÂáΩÊï∞
  // @param {Function} onComplete - ÂÆåÊàêÂõûË∞ÉÂáΩÊï∞
  // @param {Function} onError - ÈîôËØØÂõûË∞ÉÂáΩÊï∞
  async simulateSummary(onProgress, onComplete, onError) {
    console.log('ÂºÄÂßãÁîüÊàêÊÄªÁªì...');

    try {
      // ÊòæÁ§∫ÂàùÂßãËøõÂ∫¶
      onProgress(15, 'ÂàÜÊûêËΩ¨ÂΩïÂÜÖÂÆπ...');

      // Ë∞ÉÁî®ÂêéÁ´ØAPIÁîüÊàêÊÄªÁªì
      const response = await fetch('http://localhost:9000/api/generate_summary', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({})
      });

      const result = await response.json();

      if (!result.success) {
        throw new Error(result.error || 'ÁîüÊàêÊÄªÁªìÂ§±Ë¥•');
      }

      // ÊòæÁ§∫ËøõÂ∫¶
      onProgress(70, 'Ê†ºÂºèÂåñÊÄªÁªì...');

      // Ëé∑ÂèñÊÄªÁªìÊñáÊú¨
      const summaryResponse = await fetch('http://localhost:9000/api/summary/text');
      const summaryResult = await summaryResponse.json();

      if (!summaryResult.success) {
        throw new Error(summaryResult.error || 'Ëé∑ÂèñÊÄªÁªìÊñáÊú¨Â§±Ë¥•');
      }

      // ÂÆåÊàê
      onProgress(100, 'ÊÄªÁªìÂÆåÊàê!');
      onComplete(summaryResult.data.summary || this.mockSummaryText);

    } catch (error) {
      console.error('ÊÄªÁªìÁîüÊàêÂá∫Èîô:', error);
      onError('ÊÄªÁªìÁîüÊàêËøáÁ®ã‰∏≠ÂèëÁîüÈîôËØØÔºåËØ∑ÈáçËØï„ÄÇ');
    }
  },

  // Âª∂ËøüÂáΩÊï∞
  // @param {number} ms - Âª∂ËøüÊØ´ÁßíÊï∞
  delay(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
  }
};

// È°µÈù¢Âä®ÁîªÊïàÊûú
const SummaryPageAnimations = {
  // È°µÈù¢ËøõÂÖ•Âä®Áîª
  // @param {HTMLElement} pageElement - È°µÈù¢ÂÖÉÁ¥†
  pageEntry(pageElement) {
    if (!pageElement || typeof gsap === 'undefined') return;
    window.MeetingSummarizerUtils.AnimationHelpers.animatePageEntry(pageElement);
  },

  // Âä†ËΩΩÂä®Áîª
  // @param {HTMLElement} loadingElement - Âä†ËΩΩÂÖÉÁ¥†
  startLoading(loadingElement) {
    if (!loadingElement || typeof gsap === 'undefined') return;

    // ÊòæÁ§∫Âä†ËΩΩÂÖÉÁ¥†
    loadingElement.style.display = 'flex';

    // Ê∑°ÂÖ•Âä®Áîª
    gsap.fromTo(loadingElement,
      { opacity: 0, y: 20 },
      {
        opacity: 1,
        y: 0,
        duration: 0.5,
        ease: "power2.out"
      }
    );

    // Âä†ËΩΩÂõæÊ†áÊóãËΩ¨Âä®Áîª
    const loadingIcon = loadingElement.querySelector('.loading-icon');
    if (loadingIcon) {
      gsap.to(loadingIcon, {
        rotation: 360,
        duration: 1.2,
        ease: "none",
        repeat: -1
      });
    }
  },

  // ÂÅúÊ≠¢Âä†ËΩΩÂä®Áîª
  // @param {HTMLElement} loadingElement - Âä†ËΩΩÂÖÉÁ¥†
  stopLoading(loadingElement) {
    if (!loadingElement || typeof gsap === 'undefined') return;

    // ÂÅúÊ≠¢ÊâÄÊúâÂä®Áîª
    gsap.killTweensOf(loadingElement);
    const loadingIcon = loadingElement.querySelector('.loading-icon');
    if (loadingIcon) {
      gsap.killTweensOf(loadingIcon);
    }

    // Ê∑°Âá∫Âä®Áîª
    gsap.to(loadingElement, {
      opacity: 0,
      y: -20,
      duration: 0.3,
      ease: "power2.in",
      onComplete: () => {
        loadingElement.style.display = 'none';
      }
    });
  },

  // ÊñáÊú¨ÂÆπÂô®ÊòæÁ§∫Âä®Áîª
  // @param {HTMLElement} textContainer - ÊñáÊú¨ÂÆπÂô®
  showTextContainer(textContainer) {
    if (!textContainer) return;

    if (typeof gsap === 'undefined') {
      // Â¶ÇÊûúÊ≤°ÊúâgsapÔºåÁõ¥Êé•ËÆæÁΩÆÊ†∑Âºè
      textContainer.style.opacity = '1';
      return;
    }

    gsap.fromTo(textContainer,
      { opacity: 0 },
      {
        opacity: 1,
        duration: 0.6,
        ease: "power2.out"
      }
    );
  },



  /**
   * ËøõÂ∫¶Êù°Âä®Áîª
   * @param {HTMLElement} progressBar - ËøõÂ∫¶Êù°ÂÖÉÁ¥†
   * @param {number} progress - ËøõÂ∫¶ÁôæÂàÜÊØî (0-100)
   */
  updateProgress(progressBar, progress) {
    if (!progressBar || typeof gsap === 'undefined') {
      progressBar.style.width = progress + '%';
      return;
    }

    gsap.to(progressBar, {
      width: progress + '%',
      duration: 0.5,
      ease: "power2.out"
    });
  },

  // Ê≥®ÊÑèÔºöÊàêÂäüÁä∂ÊÄÅÂä®ÁîªÂ∑≤ÁßªËá≥CSSÂÆûÁé∞


};

// È°µÈù¢ÊéßÂà∂Âô®
const SummaryPageController = {
  boundToggleClickHandler: null, // Áî®‰∫éÂ≠òÂÇ®ÁªëÂÆö‰∫ÜthisÁöÑtoggleTextToSpeechÂ§ÑÁêÜÂáΩÊï∞
  boundCopyClickHandler: null, // Áî®‰∫éÂ≠òÂÇ®ÁªëÂÆö‰∫ÜthisÁöÑÂ§çÂà∂Â§ÑÁêÜÂáΩÊï∞
  boundDownloadClickHandler: null, // Áî®‰∫éÂ≠òÂÇ®ÁªëÂÆö‰∫ÜthisÁöÑ‰∏ãËΩΩÂ§ÑÁêÜÂáΩÊï∞
  /**
   * ÂàùÂßãÂåñÈ°µÈù¢
   */
  init() {
    if (SummaryPageState.isInitialized) {
      console.log('ÊÄªÁªìÈ°µÈù¢Â∑≤ÁªèÂàùÂßãÂåñ');
      // Â¶ÇÊûúÈ°µÈù¢Â∑≤ÁªèÂàùÂßãÂåñ‰ΩÜ‰∏çÂèØËßÅÔºåÂèØËÉΩÈúÄË¶ÅÈáçÊñ∞Ëß¶ÂèëÊÄªÁªìÔºàÂ¶ÇÊûúÈÄªËæëÂÖÅËÆ∏Ôºâ
      // ‰ΩÜÈÄöÂ∏∏initÂè™ÊâßË°å‰∏ÄÊ¨°
      return;
    }

    console.log('ÂàùÂßãÂåñÊÄªÁªìÈ°µÈù¢...');

    // ÁªëÂÆö‰∫ã‰ª∂
    this.bindEvents();

    // ÂàùÂßãÂåñÊåâÈíÆÁä∂ÊÄÅ
    this.updateButtonStates();

    // Ê†áËÆ∞‰∏∫Â∑≤ÂàùÂßãÂåñ
    SummaryPageState.isInitialized = true;

    // È¶ñÊ¨°ËøõÂÖ•È°µÈù¢Êó∂Ëá™Âä®ÂºÄÂßãÊÄªÁªìÊµÅÁ®ã
    // Ê≥®ÊÑèÔºöËøôÈáåÂÅáËÆæinitÂú®È°µÈù¢Âèò‰∏∫Ê¥ªÂä®È°µÈù¢Êó∂Ë¢´Ë∞ÉÁî®ÔºåÊàñËÄÖÊúâÂÖ∂‰ªñÊú∫Âà∂Ëß¶ÂèëstartSummary
    // Â¶ÇÊûúinitÂè™Âú®Â∫îÁî®Âä†ËΩΩÊó∂Ë∞ÉÁî®‰∏ÄÊ¨°ÔºåÈÇ£‰πàstartSummaryÈúÄË¶ÅÂú®‰∏Ä‰∏™Êõ¥ÂêàÈÄÇÁöÑÊó∂Êú∫Ë¢´Ë∞ÉÁî®Ôºå
    // ‰æãÂ¶ÇÔºåÂΩìÁî®Êà∑ÂØºËà™Âà∞Ê≠§È°µÈù¢Êó∂„ÄÇ
    // ‰∏∫Á°Æ‰øùÊºîÁ§∫ÊïàÊûúÔºåÊàë‰ª¨ÊöÇÊó∂Âú®ËøôÈáåË∞ÉÁî®Ôºå‰ΩÜÂÆûÈôÖÂ∫îÁî®‰∏≠ÂèØËÉΩÈúÄË¶ÅË∞ÉÊï¥„ÄÇ
    // this.startSummary(); // ÊöÇÊó∂Ê≥®ÈáäÊéâÔºåÂõ†‰∏∫startSummaryÂ∫îËØ•Âú®È°µÈù¢ÊòæÁ§∫Êó∂Ë∞ÉÁî®

    console.log('ÊÄªÁªìÈ°µÈù¢ÂàùÂßãÂåñÂÆåÊàê');
  },

  /**
   * ÂΩìÈ°µÈù¢ÊòæÁ§∫Êó∂Ë∞ÉÁî®
   */
  onPageShow() {
    console.log('ÊÄªÁªìÈ°µÈù¢ÊòæÁ§∫');
    SummaryPageState.isVisible = true;
    // Á°Æ‰øùÊØèÊ¨°ÊòæÁ§∫È°µÈù¢Êó∂ÔºåÂ¶ÇÊûúÊÄªÁªìÂ∞öÊú™ÂºÄÂßãÊàñÂ§±Ë¥•ÔºåÂàôÂ∞ùËØïÂºÄÂßãÊÄªÁªì
    if (SummaryPageState.summaryStatus === 'idle' || SummaryPageState.summaryStatus === 'error') {
      this.startSummary();
    }
    this.updateButtonStates(); // Á°Æ‰øùÊåâÈíÆÁä∂ÊÄÅÂú®È°µÈù¢ÊòæÁ§∫Êó∂Êõ¥Êñ∞
  },

  /**
   * ÂΩìÈ°µÈù¢ÈöêËóèÊó∂Ë∞ÉÁî®
   */
  onPageHide() {
    console.log('ÊÄªÁªìÈ°µÈù¢ÈöêËóè');
    SummaryPageState.isVisible = false;
    // Â¶ÇÊûúÊúâÊ≠£Âú®ËøõË°åÁöÑÊúóËØªÔºåÂú®ËøôÈáåÂÅúÊ≠¢
    if (window.speechSynthesis && window.speechSynthesis.speaking) {
      window.speechSynthesis.cancel();
      this.updateSpeechButton(false); // Êõ¥Êñ∞ÊúóËØªÊåâÈíÆÁä∂ÊÄÅ
    }
  },

  /**
   * ÁªëÂÆöÈ°µÈù¢‰∫ã‰ª∂
   */
  bindEvents() {
    // ÁªëÂÆöÂØºËà™ÊåâÈíÆ
    this.bindNavigationButtons();

    // ÁªëÂÆöÂäüËÉΩÊåâÈíÆ
    this.bindFunctionButtons();

    console.log('ÊÄªÁªìÈ°µÈù¢‰∫ã‰ª∂ÁªëÂÆöÂÆåÊàê');
  },

  /**
   * ÁªëÂÆöÂäüËÉΩÊåâÈíÆ‰∫ã‰ª∂
   */
  bindFunctionButtons() {
    const copyButton = document.querySelector('#page-4 .function-buttons .copy-button');
    const downloadButton = document.querySelector('#page-4 .function-buttons .download-button');
    const readButton = document.querySelector('#page-4 .function-buttons .read-button');

    if (copyButton) {
      if (!this.boundCopyClickHandler) {
        this.boundCopyClickHandler = () => {
          if (SummaryPageState.summaryStatus === 'completed' && SummaryPageState.summaryText) {
            window.MeetingSummarizerUtils.DocumentTools.copyText(
              SummaryPageState.summaryText,
              (message) => window.MeetingSummarizerUtils.DocumentTools.showToast(message, 'success'),
              (message) => window.MeetingSummarizerUtils.DocumentTools.showToast(message, 'error')
            );
          } else if (SummaryPageState.summaryStatus === 'loading') {
            window.MeetingSummarizerUtils.DocumentTools.showToast('Summary generation in progress, please wait...', 'info');
          } else {
            window.MeetingSummarizerUtils.DocumentTools.showToast('No text to copy', 'error');
          }
        };
      }
      copyButton.removeEventListener('click', this.boundCopyClickHandler);
      copyButton.addEventListener('click', this.boundCopyClickHandler);
      // Ê∑ªÂä†Èº†Ê†áÊÇ¨ÂÅúÊïàÊûú
      copyButton.style.cursor = 'pointer';
    }

    if (downloadButton) {
      if (!this.boundDownloadClickHandler) {
        this.boundDownloadClickHandler = () => {
          if (SummaryPageState.summaryStatus === 'completed' && SummaryPageState.summaryText) {
            window.MeetingSummarizerUtils.DocumentTools.downloadText(
              SummaryPageState.summaryText,
              'meeting-summary.txt',
              (message) => window.MeetingSummarizerUtils.DocumentTools.showToast(message, 'success'),
              (message) => window.MeetingSummarizerUtils.DocumentTools.showToast(message, 'error')
            );
          } else if (SummaryPageState.summaryStatus === 'loading') {
            window.MeetingSummarizerUtils.DocumentTools.showToast('Summary generation in progress, please wait...', 'info');
          } else {
            window.MeetingSummarizerUtils.DocumentTools.showToast('No text to download', 'error');
          }
        };
      }
      downloadButton.removeEventListener('click', this.boundDownloadClickHandler);
      downloadButton.addEventListener('click', this.boundDownloadClickHandler);
      // Ê∑ªÂä†Èº†Ê†áÊÇ¨ÂÅúÊïàÊûú
      downloadButton.style.cursor = 'pointer';
    }

    if (readButton) {
      // Á°Æ‰øù this.boundToggleClickHandler ÊÄªÊòØÂºïÁî®Âêå‰∏Ä‰∏™ÁªëÂÆö‰∫Ü this ÁöÑÂáΩÊï∞
      if (!this.boundToggleClickHandler) {
        this.boundToggleClickHandler = this.toggleTextToSpeech.bind(this);
      }

      // ÁßªÈô§ÊóßÁöÑ‰∫ã‰ª∂ÁõëÂê¨Âô®Ôºå‰ΩøÁî®‰πãÂâçÂ≠òÂÇ®ÁöÑÁ®≥ÂÆöÂºïÁî®
      readButton.removeEventListener('click', this.boundToggleClickHandler);

      // Ê∑ªÂä†Êñ∞ÁöÑ‰∫ã‰ª∂ÁõëÂê¨Âô®Ôºå‰ΩøÁî®Á®≥ÂÆöÂºïÁî®
      readButton.addEventListener('click', this.boundToggleClickHandler);

      // Ê∑ªÂä†Èº†Ê†áÊÇ¨ÂÅúÊïàÊûú
      readButton.style.cursor = 'pointer';
    }
  },

  /**
   * ÁªëÂÆöÂØºËà™ÊåâÈíÆ‰∫ã‰ª∂
   */
  bindNavigationButtons() {
    const page4Buttons = document.querySelectorAll('#page-4 .button');

    if (page4Buttons.length >= 2) {
      // BackÊåâÈíÆ
      page4Buttons[0].addEventListener('click', () => {
        if (window.MeetingSummarizer) {
          window.MeetingSummarizer.showPage(3);
        }
      });

      // FinishÊåâÈíÆ
      page4Buttons[1].addEventListener('click', () => {
        if (SummaryPageState.canClickFinish) {
          this.handleFinish();
        }
      });
    }
  },

  /**
   * ÂºÄÂßãÊÄªÁªìÁîüÊàêËøáÁ®ã
   */
  startSummary() {
    if (SummaryPageState.summaryStatus === 'loading') {
      console.log('ÊÄªÁªìÁîüÊàêÂ∑≤Âú®ËøõË°å‰∏≠');
      return;
    }

    console.log('ÂºÄÂßãÊÄªÁªìÁîüÊàêËøáÁ®ã...');

    // Êõ¥Êñ∞Áä∂ÊÄÅ
    SummaryPageState.summaryStatus = 'loading';
    SummaryPageState.canClickFinish = false;

    // Ëé∑ÂèñUIÂÖÉÁ¥†
    const loadingContainer = document.getElementById('summary-loading');
    const textContainer = document.getElementById('summary-text-container');
    const progressBar = document.querySelector('#summary-loading .progress-fill');
    const loadingText = document.querySelector('#summary-loading .loading-text');

    // ÈöêËóèÊñáÊú¨ÂÆπÂô®ÔºåÊòæÁ§∫Âä†ËΩΩÂÆπÂô®
    if (textContainer) textContainer.style.display = 'none';
    if (loadingContainer) {
      SummaryPageAnimations.startLoading(loadingContainer);
    }

    // Êõ¥Êñ∞ÊåâÈíÆÁä∂ÊÄÅ
    this.updateButtonStates();

    // ÂºÄÂßãÊ®°ÊãüÊÄªÁªìÁîüÊàê
    SummarySimulator.simulateSummary(
      // ËøõÂ∫¶ÂõûË∞É
      (progress, message) => {
        if (progressBar) {
          SummaryPageAnimations.updateProgress(progressBar, progress);
        }
        if (loadingText) {
          loadingText.textContent = message;
        }
      },
      // ÂÆåÊàêÂõûË∞É
      (summaryText) => {
        this.onSummaryComplete(summaryText);
      },
      // ÈîôËØØÂõûË∞É
      (errorMessage) => {
        this.onSummaryError(errorMessage);
      }
    );
  },

  /**
   * ÊÄªÁªìÂÆåÊàêÂ§ÑÁêÜ
   * @param {string} summaryText - ÊÄªÁªìÊñáÊú¨
   */
  onSummaryComplete(summaryText) {
    console.log('ÊÄªÁªìÁîüÊàêÂÆåÊàê. ÊñáÊú¨:', summaryText);

    // Êõ¥Êñ∞Áä∂ÊÄÅ
    SummaryPageState.summaryStatus = 'completed';
    SummaryPageState.summaryText = summaryText;
    SummaryPageState.canClickFinish = true;
    SummaryPageState.isRendered = true;
    console.log('SummaryPageState Êõ¥Êñ∞ (ÂÆåÊàê):', JSON.parse(JSON.stringify(SummaryPageState)));

    // Ëé∑ÂèñUIÂÖÉÁ¥†
    const loadingContainer = document.getElementById('summary-loading');
    const summaryContent = document.querySelector('#page-4 .summary-content');
    const summaryTextElement = document.getElementById('summary-text');

    // ÂÅúÊ≠¢Âä†ËΩΩÂä®Áîª
    if (loadingContainer) {
      SummaryPageAnimations.stopLoading(loadingContainer);
    }

    // Âª∂ËøüÊòæÁ§∫ÊñáÊú¨ÂÆπÂô®
    setTimeout(() => {
      // Á°Æ‰øùÊñáÊú¨ÂÖÉÁ¥†ÂèØËßÅ
      if (summaryTextElement) {
        summaryTextElement.style.display = 'block';
        summaryTextElement.style.opacity = '1';

        // ‰ΩøÁî®Áªü‰∏ÄÁöÑÊñáÊú¨Âä®ÁîªÂáΩÊï∞
        window.MeetingSummarizerUtils.DocumentTools.animateTextReveal(
          summaryTextElement,
          summaryText,
          () => {
            console.log('ÊÄªÁªìÊñáÊú¨ÊòæÁ§∫ÂÆåÊàê');
          }
        );
      }

      // Êõ¥Êñ∞ÊåâÈíÆÁä∂ÊÄÅ
      this.updateButtonStates();
      console.log('ÊåâÈíÆÁä∂ÊÄÅÂ∑≤Âú® onSummaryComplete ‰∏≠Êõ¥Êñ∞');
    }, 500);
  },

  /**
   * ÊÄªÁªìÈîôËØØÂ§ÑÁêÜ
   * @param {string} errorMessage - ÈîôËØØ‰ø°ÊÅØ
   */
  onSummaryError(errorMessage) {
    console.error('ÊÄªÁªìÁîüÊàêÂ§±Ë¥•:', errorMessage);

    // Êõ¥Êñ∞Áä∂ÊÄÅ
    SummaryPageState.summaryStatus = 'error';
    SummaryPageState.summaryText = ''; // ÈîôËØØÊó∂Ê∏ÖÁ©∫ÊñáÊú¨
    SummaryPageState.canClickFinish = false;
    console.log('SummaryPageState Êõ¥Êñ∞ (ÈîôËØØ):', JSON.parse(JSON.stringify(SummaryPageState)));

    // Ëé∑ÂèñUIÂÖÉÁ¥†
    const loadingContainer = document.getElementById('summary-loading');
    const textContainer = document.getElementById('summary-text-container');
    const summaryTextElement = document.getElementById('summary-text');

    // ÂÅúÊ≠¢Âä†ËΩΩÂä®Áîª
    if (loadingContainer) {
      SummaryPageAnimations.stopLoading(loadingContainer);
    }

    // ÊòæÁ§∫ÈîôËØØ‰ø°ÊÅØ
    setTimeout(() => {
      if (textContainer) {
        SummaryPageAnimations.showTextContainer(textContainer);
      }

      if (summaryTextElement) {
        summaryTextElement.innerHTML = `<p style="color: #e74c3c;">Error: ${errorMessage}</p>`;
      }
      this.updateButtonStates(); // Á°Æ‰øùÈîôËØØÊó∂‰πüÊõ¥Êñ∞ÊåâÈíÆÁä∂ÊÄÅ
      console.log('ÊåâÈíÆÁä∂ÊÄÅÂ∑≤Âú® onSummaryError ‰∏≠Êõ¥Êñ∞');

      // Êõ¥Êñ∞ÊåâÈíÆÁä∂ÊÄÅ
      this.updateButtonStates();
    }, 500);

    // ÊòæÁ§∫ÈîôËØØÊèêÁ§∫
    alert(errorMessage);
  },

  /**
   * Âä†ËΩΩÁé∞ÊúâÊÄªÁªìÂÜÖÂÆπ
   */
  loadExistingContent() {
    if (!SummaryPageState.isRendered || !SummaryPageState.summaryText) {
      console.log('Ê≤°ÊúâÁé∞ÊúâÊÄªÁªìÂÜÖÂÆπÔºåÂºÄÂßãÊñ∞ÁöÑÊÄªÁªìÁîüÊàê');
      this.startSummary();
      return;
    }

    console.log('Âä†ËΩΩÁé∞ÊúâÊÄªÁªìÂÜÖÂÆπ');

    // Ëé∑ÂèñUIÂÖÉÁ¥†
    const loadingContainer = document.getElementById('summary-loading');
    const textContainer = document.getElementById('summary-text-container');
    const summaryTextElement = document.getElementById('summary-text');

    // ÈöêËóèÂä†ËΩΩÂÆπÂô®
    if (loadingContainer) loadingContainer.style.display = 'none';

    // ÊòæÁ§∫Áé∞ÊúâÂÜÖÂÆπ
    if (textContainer) {
      textContainer.style.display = 'block';
    }

    if (summaryTextElement) {
      summaryTextElement.textContent = SummaryPageState.summaryText;
    }

    // Êõ¥Êñ∞ÊåâÈíÆÁä∂ÊÄÅ
    this.updateButtonStates();
  },

  /**
   * Â§ÑÁêÜÂÆåÊàêÊåâÈíÆÁÇπÂáª
   */
  handleFinish() {
    console.log('‰ºöËÆÆÊÄªÁªìÂÆåÊàêÔºÅ');

    // ÊòæÁ§∫Á°ÆËÆ§ÂØπËØùÊ°Ü
    if (confirm('Are you sure you want to complete the meeting summary and return to the home page? All data will be cleared.')) {
      // ÈáçÁΩÆÂ∫îÁî®Âπ∂ËøîÂõûÈ¶ñÈ°µ
      this.resetApplication();
      window.MeetingSummarizerUtils.DocumentTools.showToast('Application reset and returned to home page', 'success');
    }
  },

  /**
   * ÈáçÁΩÆÊï¥‰∏™Â∫îÁî®
   */
  resetApplication() {
    console.log('ÈáçÁΩÆÊï¥‰∏™Â∫îÁî®');

    // ÈáçÁΩÆÊâÄÊúâÈ°µÈù¢Áä∂ÊÄÅ
    if (window.WelcomePage) window.WelcomePage.resetState();
    if (window.UploadPage) window.UploadPage.resetState();
    if (window.TranscriptionPage) window.TranscriptionPage.resetState();
    this.resetState(); // ÈáçÁΩÆÂΩìÂâçÈ°µÈù¢Áä∂ÊÄÅ

    // ËøîÂõûÁ¨¨‰∏ÄÈ°µ
    if (window.MeetingSummarizer) {
      window.MeetingSummarizer.showPage(1);
    }
  },

  /**
   * ÂàáÊç¢ÊñáÊú¨ÊúóËØªÂäüËÉΩ
   */
  toggleTextToSpeech() {
    // È¶ñÂÖàÊ£ÄÊü•ÊÄªÁªìÁä∂ÊÄÅÂíåÊñáÊú¨
    if (SummaryPageState.summaryStatus === 'loading') {
      window.MeetingSummarizerUtils.DocumentTools.showToast('Summary generation in progress, please wait...', 'info');
      return;
    }
    if (SummaryPageState.summaryStatus !== 'completed' || !SummaryPageState.summaryText) {
      window.MeetingSummarizerUtils.DocumentTools.showToast('No text to read', 'error');
      return;
    }

    // ÂéüÊúâÁöÑÊúóËØªÈÄªËæë
    const synth = window.speechSynthesis;

    // Èò≤Ê≠¢Â§öÊ¨°ÂõûË∞ÉÂØºËá¥ÈáçÂ§çtoast
    if (!this._speechStopped) this._speechStopped = false;
    if (synth.speaking) {
      if (!this._speechStopped) {
        this._speechStopped = true;
        window.MeetingSummarizerUtils.DocumentTools.stopSpeaking(
          (message) => {
            window.MeetingSummarizerUtils.DocumentTools.showToast(message, 'info');
            this.updateSpeechButton(false);
            setTimeout(() => { this._speechStopped = false; }, 500);
          }
        );
      }
      return;
    }

    // ‰ΩøÁî®DocumentToolsÊúóËØªÊñáÊú¨
    this._speechStopped = false;
    const isPlaying = window.MeetingSummarizerUtils.DocumentTools.speakText(
      SummaryPageState.summaryText,
      (message) => {
        window.MeetingSummarizerUtils.DocumentTools.showToast(message, 'info');
        this.updateSpeechButton(true);
      },
      (message) => {
        if (!this._speechStopped) {
          this._speechStopped = true;
          window.MeetingSummarizerUtils.DocumentTools.showToast(message, 'success');
          this.updateSpeechButton(false);
          setTimeout(() => { this._speechStopped = false; }, 500);
        }
      },
      (message) => {
        if (!this._speechStopped) {
          this._speechStopped = true;
          // Áªü‰∏ÄÊúóËØªÂÅúÊ≠¢Êó∂ÁöÑÊèêÁ§∫ÂÜÖÂÆπÂíåÁ±ªÂûã‰∏∫ 'Speech stopped'ÔºåÁ±ªÂûã‰∏∫ 'info'
          if (message === 'Speech failed, please try again') {
            window.MeetingSummarizerUtils.DocumentTools.showToast('Speech stopped', 'info');
          } else {
            window.MeetingSummarizerUtils.DocumentTools.showToast(message, 'info');
          }
          this.updateSpeechButton(false);
          setTimeout(() => { this._speechStopped = false; }, 500);
        }
      }
    );

    if (!isPlaying) {
      this.updateSpeechButton(false);
    }
  },

  /**
   * Êõ¥Êñ∞ÊúóËØªÊåâÈíÆÁä∂ÊÄÅ
   * @param {boolean} isPlaying - ÊòØÂê¶Ê≠£Âú®Êí≠Êîæ
   */
  updateSpeechButton(isPlaying) {
    const speechButton = document.querySelector('#page-4 .function-buttons .read-button');
    if (speechButton) {
      speechButton.style.color = isPlaying ? '#007bff' : 'black';
    }
  },

  /**
   * Êõ¥Êñ∞ÊåâÈíÆÁä∂ÊÄÅ
   */
  updateButtonStates() {
    const canFinish = SummaryPageState.summaryStatus === 'completed';
    const isLoading = SummaryPageState.summaryStatus === 'loading';

    // Êõ¥Êñ∞FinishÊåâÈíÆÊ†∑Âºè
    const finishButton = document.querySelector('#page-4 .button:nth-child(2)');
    if (finishButton) {
      if (canFinish) {
        finishButton.classList.remove('button-disabled');
      } else {
        finishButton.classList.add('button-disabled');
      }
    }

    // Êõ¥Êñ∞ÂäüËÉΩÊåâÈíÆÁä∂ÊÄÅ
    const summaryControls = document.querySelector('#page-4 .summary-controls');
    if (summaryControls) {
      const controlButtons = summaryControls.querySelectorAll('svg');

      controlButtons.forEach(button => {
        if (isLoading) {
          // Âä†ËΩΩ‰∏≠Á¶ÅÁî®ÊåâÈíÆ
          button.style.opacity = '0.5';
          button.style.cursor = 'not-allowed';
          button.style.pointerEvents = 'none';
        } else {
          // Âä†ËΩΩÂÆåÊàêÂêØÁî®ÊåâÈíÆ
          button.style.opacity = '1';
          button.style.cursor = 'pointer';
          button.style.pointerEvents = 'auto';
        }
      });
    }
  },

  /**
   * ÈáçÁΩÆÈ°µÈù¢Áä∂ÊÄÅ
   */
  resetState() {
    console.log('ÈáçÁΩÆÊÄªÁªìÈ°µÈù¢Áä∂ÊÄÅ');

    // ÈáçÁΩÆÁä∂ÊÄÅ
    SummaryPageState.summaryStatus = 'idle';
    SummaryPageState.summaryText = '';
    SummaryPageState.isRendered = false;
    SummaryPageState.canClickFinish = false;

    // ÈáçÁΩÆUI
    const loadingContainer = document.getElementById('summary-loading');
    const textContainer = document.getElementById('summary-text-container');
    const summaryTextElement = document.getElementById('summary-text');
    const progressBar = document.querySelector('#summary-loading .progress-fill');
    const loadingText = document.querySelector('#summary-loading .loading-text');

    if (loadingContainer) {
      loadingContainer.style.display = 'none';
      SummaryPageAnimations.stopLoading(loadingContainer);
    }

    if (textContainer) textContainer.style.display = 'none';

    if (summaryTextElement) summaryTextElement.innerHTML = '';

    if (progressBar) progressBar.style.width = '0%';

    if (loadingText) loadingText.textContent = 'Analyzing transcription content...';

    // Êõ¥Êñ∞ÊåâÈíÆÁä∂ÊÄÅ
    this.updateButtonStates();
  },

  /**
   * ÊòæÁ§∫È°µÈù¢
   */
  show() {
    console.log('ÊòæÁ§∫ÊÄªÁªìÈ°µÈù¢');

    const pageElement = document.getElementById('page-4');
    if (pageElement) {
      SummaryPageAnimations.pageEntry(pageElement);
      SummaryPageState.isVisible = true;

      // Ê†πÊçÆÊòØÂê¶Â∑≤Ê∏≤ÊüìÂÜ≥ÂÆöÂä†ËΩΩÂÜÖÂÆπËøòÊòØÂºÄÂßãÊÄªÁªìÁîüÊàê
      if (SummaryPageState.isRendered) {
        this.loadExistingContent();
      } else {
        this.startSummary();
      }
    }
  },

  /**
   * ÈöêËóèÈ°µÈù¢
   */
  hide() {
    console.log('ÈöêËóèÊÄªÁªìÈ°µÈù¢');
    SummaryPageState.isVisible = false;
  },

  /**
   * ÈîÄÊØÅÈ°µÈù¢
   */
  destroy() {
    console.log('ÈîÄÊØÅÊÄªÁªìÈ°µÈù¢');

    // ÈáçÁΩÆÁä∂ÊÄÅ
    this.resetState();
    SummaryPageState.isInitialized = false;
    SummaryPageState.isVisible = false;
  }
};

// È°µÈù¢Ê®°ÂùóÂØπË±°
const SummaryPage = {
  init: SummaryPageController.init.bind(SummaryPageController),
  show: function () {
    SummaryPageController.show.call(SummaryPageController);
    SummaryPageController.onPageShow.call(SummaryPageController);
  },
  hide: function () {
    SummaryPageController.hide.call(SummaryPageController);
    SummaryPageController.onPageHide.call(SummaryPageController);
  },
  destroy: SummaryPageController.destroy.bind(SummaryPageController),
  resetState: SummaryPageController.resetState.bind(SummaryPageController),
  startSummary: SummaryPageController.startSummary.bind(SummaryPageController),
  state: SummaryPageState
};

// Ëá™Âä®ÂàùÂßãÂåñÂπ∂Ê≥®ÂÜåÈ°µÈù¢Ê®°Âùó
document.addEventListener('DOMContentLoaded', () => {
  // ÂàùÂßãÂåñÈ°µÈù¢
  SummaryPage.init();

  // Ê≥®ÂÜåÂà∞ÂÖ®Â±ÄÂ∫îÁî®
  if (window.MeetingSummarizer) {
    window.MeetingSummarizer.registerPageModule(4, SummaryPage);
  } else {
    setTimeout(() => {
      if (window.MeetingSummarizer) {
        window.MeetingSummarizer.registerPageModule(4, SummaryPage);
      }
    }, 100);
  }
});

// Ëá™Âä®ÂàùÂßãÂåñÂπ∂Ê≥®ÂÜåÈ°µÈù¢Ê®°Âùó
document.addEventListener('DOMContentLoaded', () => {
  // ÂàùÂßãÂåñÈ°µÈù¢
  SummaryPage.init();

  // Ê≥®ÂÜåÂà∞ÂÖ®Â±ÄÂ∫îÁî®
  if (window.MeetingSummarizer) {
    window.MeetingSummarizer.registerPageModule(4, SummaryPage);
  } else {
    setTimeout(() => {
      if (window.MeetingSummarizer) {
        window.MeetingSummarizer.registerPageModule(4, SummaryPage);
      }
    }, 100);
  }
});

// ÂØºÂá∫È°µÈù¢Ê®°Âùó
window.SummaryPage = SummaryPage;